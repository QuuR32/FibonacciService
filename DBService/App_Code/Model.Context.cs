//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Entity.Core.Objects;
using System.Linq;

public partial class MSSQLLocalDBEntities : DbContext
{
    public MSSQLLocalDBEntities()
        : base("name=MSSQLLocalDBEntities")
    {
        this.Configuration.ProxyCreationEnabled = false;
    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }

    public virtual DbSet<Departments> Departments { get; set; }
    public virtual DbSet<Employees> Employees { get; set; }
    public virtual DbSet<EmployeesDetails> EmployeesDetails { get; set; }

    public virtual int Employee_Delete(Nullable<int> id)
    {
        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Employee_Delete", idParameter);
    }

    public virtual ObjectResult<Nullable<int>> Employee_Insert(string firstName, string lastName, string gender, Nullable<int> salary, Nullable<int> departmentId, string jobTitle)
    {
        var firstNameParameter = firstName != null ?
            new ObjectParameter("FirstName", firstName) :
            new ObjectParameter("FirstName", typeof(string));

        var lastNameParameter = lastName != null ?
            new ObjectParameter("LastName", lastName) :
            new ObjectParameter("LastName", typeof(string));

        var genderParameter = gender != null ?
            new ObjectParameter("Gender", gender) :
            new ObjectParameter("Gender", typeof(string));

        var salaryParameter = salary.HasValue ?
            new ObjectParameter("Salary", salary) :
            new ObjectParameter("Salary", typeof(int));

        var departmentIdParameter = departmentId.HasValue ?
            new ObjectParameter("DepartmentId", departmentId) :
            new ObjectParameter("DepartmentId", typeof(int));

        var jobTitleParameter = jobTitle != null ?
            new ObjectParameter("JobTitle", jobTitle) :
            new ObjectParameter("JobTitle", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Employee_Insert", firstNameParameter, lastNameParameter, genderParameter, salaryParameter, departmentIdParameter, jobTitleParameter);
    }

    public virtual int Employee_Update(Nullable<int> id, string firstName, string lastName, string gender, Nullable<int> salary, Nullable<int> departmentId, string jobTitle)
    {
        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));

        var firstNameParameter = firstName != null ?
            new ObjectParameter("FirstName", firstName) :
            new ObjectParameter("FirstName", typeof(string));

        var lastNameParameter = lastName != null ?
            new ObjectParameter("LastName", lastName) :
            new ObjectParameter("LastName", typeof(string));

        var genderParameter = gender != null ?
            new ObjectParameter("Gender", gender) :
            new ObjectParameter("Gender", typeof(string));

        var salaryParameter = salary.HasValue ?
            new ObjectParameter("Salary", salary) :
            new ObjectParameter("Salary", typeof(int));

        var departmentIdParameter = departmentId.HasValue ?
            new ObjectParameter("DepartmentId", departmentId) :
            new ObjectParameter("DepartmentId", typeof(int));

        var jobTitleParameter = jobTitle != null ?
            new ObjectParameter("JobTitle", jobTitle) :
            new ObjectParameter("JobTitle", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Employee_Update", idParameter, firstNameParameter, lastNameParameter, genderParameter, salaryParameter, departmentIdParameter, jobTitleParameter);
    }

    public virtual int Department_Update(Nullable<int> id, string name, string location)
    {
        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));

        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));

        var locationParameter = location != null ?
            new ObjectParameter("Location", location) :
            new ObjectParameter("Location", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Department_Update", idParameter, nameParameter, locationParameter);
    }
}
